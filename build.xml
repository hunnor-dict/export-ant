<?xml version="1.0" encoding="UTF-8"?>
<project name="hunnor-ant" default="export">

	<description>Export the dictionary database and convert to various XML based formats. Back up the dictionary database.</description>

	<property file="project.properties"/>

	<property name="java.home" location="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
	<property name="kindle.compiler" location="/opt/kindlegen-2.9-amazon/kindlegen"/>
	<property name="saxon.jar" location="/opt/saxon-9-he/saxon9he.jar"/>
	<property name="stardict.compiler" location="/usr/lib/stardict-tools/stardict-text2bin"/>

	<property name="build.dir" location="build"/>
	<property name="project.dir" location="/opt/hunnor-dict"/>

	<property name="android.indexer" location="../export-lucene/target/export-lucene-1.0.0.jar"/>
	<property name="sqlite.indexer" location="../export-sqlite/target/export-sqlite-1.0.0.jar"/>

	<property name="deploy.dir" location="${project.dir}/Dropbox"/>
	<property name="deploy.backup.dir" location="${deploy.dir}/Backup"/>
	<property name="deploy.public.dir" location="${deploy.dir}/Public"/>
	<property name="deploy.public.databases.dir" location="${deploy.public.dir}/Databases"/>
	<property name="deploy.public.exports.dir" location="${deploy.public.dir}/Exports"/>

	<target name="build.dir">
		<mkdir dir="${build.dir}"/>
	</target>

	<target name="export.dump.hu.check">
		<condition property="export.dump.hu.missing">
			<not>
				<available file="${build.dir}/HunNor-XML-HN.xml"/>
			</not>
		</condition>
	</target>

	<target name="export.dump.nb.check">
		<condition property="export.dump.nb.missing">
			<not>
				<available file="${build.dir}/HunNor-XML-NH.xml"/>
			</not>
		</condition>
	</target>

	<target name="export.dump.hu" depends="build.dir,export.dump.hu.check" if="export.dump.hu.missing">
		<exec dir="${project.dir}/admin-rails" executable="bundle">
			<arg line="exec rake hn:export['hu','${build.dir}']"/>
			<env key="DB_MYSQL_PASS" value="${mysql.password}"/>
		</exec>
	</target>

	<target name="export.dump.nb" depends="build.dir,export.dump.nb.check" if="export.dump.nb.missing">
		<exec dir="${project.dir}/admin-rails" executable="bundle">
			<arg line="exec rake hn:export['nb','${build.dir}']"/>
			<env key="DB_MYSQL_PASS" value="${mysql.password}"/>
		</exec>
	</target>

	<!-- Simple HTML: An intermediate XML format which is the basis of further transformation to various offline formats. -->

	<target name="export.simple-html.hu" depends="export.dump.hu">
		<xslt style="formats/simple-html.xsl" in="${build.dir}/HunNor-XML-HN.xml" out="${build.dir}/HunNor-SimpleHTML-HN.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
		</xslt>
	</target>

	<target name="export.simple-html.nb" depends="export.dump.nb">
		<xslt style="formats/simple-html.xsl" in="${build.dir}/HunNor-XML-NH.xml" out="${build.dir}/HunNor-SimpleHTML-NH.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
		</xslt>
	</target>

	<!-- Babylon: A text file format with a proprietary syntax, for use with the Glossary Builder of the Babylon dictionary. -->

	<target name="export.babylon.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/babylon.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-BB-HN.gls" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
			<param name="direction" expression="hn"/>
		</xslt>
	</target>

	<target name="export.babylon.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/babylon.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-BB-NH.gls" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
			<param name="direction" expression="nh"/>
		</xslt>
	</target>

	<target name="export.babylon.deploy.hu" depends="export.babylon.convert.hu">
		<gzip src="${build.dir}/HunNor-BB-HN.gls" destfile="${build.dir}/HunNor-BB-HN.gls.gz"/>
		<delete file="${build.dir}/HunNor-BB-HN.gls"/>
		<move file="${build.dir}/HunNor-BB-HN.gls.gz" todir="${deploy.public.databases.dir}"/>
	</target>

	<target name="export.babylon.deploy.nb" depends="export.babylon.convert.nb">
		<gzip src="${build.dir}/HunNor-BB-NH.gls" destfile="${build.dir}/HunNor-BB-NH.gls.gz"/>
		<delete file="${build.dir}/HunNor-BB-NH.gls"/>
		<move file="${build.dir}/HunNor-BB-NH.gls.gz" todir="${deploy.public.databases.dir}"/>
	</target>

	<target name="export.babylon.hu" depends="export.babylon.deploy.hu">
	</target>

	<target name="export.babylon.nb" depends="export.babylon.deploy.nb">
	</target>

	<!-- Kindle -->

	<target name="export.kindle.hu" depends="export.dump.hu">
		<!-- Intentionally left blank -->
	</target>

	<target name="export.kindle.nb" depends="export.dump.nb">
		<xslt style="formats/kindle.xsl" in="${build.dir}/HunNor-XML-NH.xml" out="${build.dir}/HunNor-Kindle-NH.html">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
		</xslt>
		<xslt style="formats/kindle-opf.xsl" in="${build.dir}/HunNor-XML-NH.xml" out="${build.dir}/HunNor-Kindle-NH.opf">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
			<param name="contentFile" expression="HunNor-Kindle-NH.html"/>
			<param name="logoFile" expression="../images/logo-colors.png"/>
			<param name="inLanguage" expression="pt"/>
			<param name="outLanguage" expression="hu"/>
		</xslt>
		<exec dir="${build.dir}" executable="${kindle.compiler}">
			<arg line="HunNor-Kindle-NH.opf"/>
		</exec>
		<delete file="${build.dir}/HunNor-Kindle-NH.html"/>
		<delete file="${build.dir}/HunNor-Kindle-NH.opf"/>
		<move file="${build.dir}/HunNor-Kindle-NH.mobi" todir="${deploy.public.exports.dir}"/>
	</target>

	<!-- PDF -->

	<target name="export.pdf.hu" depends="export.dump.hu">
		<exec executable="fop">
			<arg line="-q -c fonts/fonts.xml -xml ${build.dir}/HunNor-XML-HN.xml -xsl formats/pdf.xsl -pdf ${build.dir}/HunNor-PDF-HN.pdf"/>
			<env key="JAVA_HOME" value="${java.home}"/>
		</exec>
		<move file="${build.dir}/HunNor-PDF-HN.pdf" todir="${deploy.public.exports.dir}"/>
	</target>

	<target name="export.pdf.nb" depends="export.dump.nb">
		<exec executable="fop">
			<arg line="-q -c fonts/fonts.xml -xml ${build.dir}/HunNor-XML-NH.xml -xsl formats/pdf.xsl -pdf ${build.dir}/HunNor-PDF-NH.pdf"/>
			<env key="JAVA_HOME" value="${java.home}"/>
		</exec>
		<move file="${build.dir}/HunNor-PDF-NH.pdf" todir="${deploy.public.exports.dir}"/>
	</target>

	<!-- SDictionary: A text file format that can be compiled to a binary .dct dictionary file with the tools included in the SDictionary project. -->

	<target name="export.sdict.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/sdict.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-SD-HN.sdct" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
			<param name="direction" expression="hn"/>
		</xslt>
	</target>

	<target name="export.sdict.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/sdict.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-SD-NH.sdct" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
			<param name="direction" expression="nh"/>
		</xslt>
	</target>

	<target name="export.sdict.deploy.hu" depends="export.sdict.convert.hu">
		<gzip src="${build.dir}/HunNor-SD-HN.sdct" destfile="${build.dir}/HunNor-SD-HN.sdct.gz"/>
		<delete file="${build.dir}/HunNor-SD-HN.sdct"/>
		<move file="${build.dir}/HunNor-SD-HN.sdct.gz" todir="${deploy.public.databases.dir}"/>
	</target>

	<target name="export.sdict.deploy.nb" depends="export.sdict.convert.nb">
		<gzip src="${build.dir}/HunNor-SD-NH.sdct" destfile="${build.dir}/HunNor-SD-NH.sdct.gz"/>
		<delete file="${build.dir}/HunNor-SD-NH.sdct"/>
		<move file="${build.dir}/HunNor-SD-NH.sdct.gz" todir="${deploy.public.databases.dir}"/>
	</target>

	<target name="export.sdict.hu" depends="export.sdict.deploy.hu">
	</target>

	<target name="export.sdict.nb" depends="export.sdict.deploy.nb">
	</target>

	<!-- StarDict -->

	<target name="export.stardict.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/stardict.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-ST-HN.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
			<param name="direction" expression="hn"/>
		</xslt>
	</target>

	<target name="export.stardict.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/stardict.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-ST-NH.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${saxon.jar}"/>
			<param name="direction" expression="nh"/>
		</xslt>
	</target>

	<target name="export.stardict.compile.hu" depends="export.stardict.convert.hu">
		<exec executable="${stardict.compiler}">
			<arg line="${build.dir}/HunNor-ST-HN.xml ${build.dir}/HunNor-ST-HN.ifo"/>
		</exec>
		<!-- Cut the BOM from the .ifo file -->
		<exec executable="tail" output="${build.dir}/HunNor-ST-HN.tmp">
			<arg line="--bytes=+4 ${build.dir}/HunNor-ST-HN.ifo"/>
		</exec>
		<delete file="${build.dir}/HunNor-ST-HN.ifo"/>
		<move file="${build.dir}/HunNor-ST-HN.tmp" tofile="${build.dir}/HunNor-ST-HN.ifo"/>
	</target>

	<target name="export.stardict.compile.nb" depends="export.stardict.convert.nb">
		<exec executable="${stardict.compiler}">
			<arg line="${build.dir}/HunNor-ST-NH.xml ${build.dir}/HunNor-ST-NH.ifo"/>
		</exec>
		<!-- Cut the BOM from the .ifo file -->
		<exec executable="tail" output="${build.dir}/HunNor-ST-NH.tmp">
			<arg line="--bytes=+4 ${build.dir}/HunNor-ST-NH.ifo"/>
		</exec>
		<delete file="${build.dir}/HunNor-ST-NH.ifo"/>
		<move file="${build.dir}/HunNor-ST-NH.tmp" tofile="${build.dir}/HunNor-ST-NH.ifo"/>
	</target>
	
	<target name="export.stardict.deploy.hu" depends="export.stardict.compile.hu">
		<zip destfile="${build.dir}/HunNor-ST-HN.zip" level="9">
			<filelist dir="." files="${build.dir}/HunNor-ST-HN.dict.dz,${build.dir}/HunNor-ST-HN.ifo,${build.dir}/HunNor-ST-HN.idx,${build.dir}/HunNor-ST-HN.syn"/>
		</zip>
		<delete file="${build.dir}/HunNor-ST-HN.dict.dz"/>
		<delete file="${build.dir}/HunNor-ST-HN.ifo"/>
		<delete file="${build.dir}/HunNor-ST-HN.idx"/>
		<delete file="${build.dir}/HunNor-ST-HN.syn"/>
		<move file="${build.dir}/HunNor-ST-HN.zip" todir="${deploy.public.exports.dir}"/>
	</target>

	<target name="export.stardict.deploy.nb" depends="export.stardict.compile.nb">
		<zip destfile="${build.dir}/HunNor-ST-NH.zip" level="9">
			<filelist dir="." files="${build.dir}/HunNor-ST-NH.dict.dz,${build.dir}/HunNor-ST-NH.ifo,${build.dir}/HunNor-ST-NH.idx,${build.dir}/HunNor-ST-NH.syn"/>
		</zip>
		<delete file="${build.dir}/HunNor-ST-NH.dict.dz"/>
		<delete file="${build.dir}/HunNor-ST-NH.ifo"/>
		<delete file="${build.dir}/HunNor-ST-NH.idx"/>
		<delete file="${build.dir}/HunNor-ST-NH.syn"/>
		<move file="${build.dir}/HunNor-ST-NH.zip" todir="${deploy.public.exports.dir}"/>
	</target>

	<target name="export.stardict.nosym.num.convert.hu" depends="export.stardict.convert.hu">
		<xslt style="formats/stardict-nosym-number.xsl" in="${build.dir}/HunNor-ST-HN.xml" out="${build.dir}/HunNor-ST-NoSym-Number-HN.xml">
			<classpath location="${saxon.jar}"/>
		</xslt>
	</target>

	<target name="export.stardict.nosym.num.convert.nb" depends="export.stardict.convert.nb">
		<xslt style="formats/stardict-nosym-number.xsl" in="${build.dir}/HunNor-ST-NH.xml" out="${build.dir}/HunNor-ST-NoSym-Number-NH.xml">
			<classpath location="${saxon.jar}"/>
		</xslt>
	</target>

	<target name="export.stardict.nosym.num.compile.hu" depends="export.stardict.nosym.num.convert.hu">
		<exec executable="${stardict.compiler}">
			<arg line="${build.dir}/HunNor-ST-NoSym-Number-HN.xml ${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
		</exec>
		<!-- Cut the BOM from the .ifo file -->
		<exec executable="tail" output="${build.dir}/HunNor-ST-NoSym-Number-HN.tmp">
			<arg line="--bytes=+4 ${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
		</exec>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-HN.tmp" tofile="${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
	</target>

	<target name="export.stardict.nosym.num.compile.nb" depends="export.stardict.nosym.num.convert.nb">
		<exec executable="${stardict.compiler}">
			<arg line="${build.dir}/HunNor-ST-NoSym-Number-NH.xml ${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
		</exec>
		<!-- Cut the BOM from the .ifo file -->
		<exec executable="tail" output="${build.dir}/HunNor-ST-NoSym-Number-NH.tmp">
			<arg line="--bytes=+4 ${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
		</exec>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-NH.tmp" tofile="${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
	</target>

	<target name="export.stardict.nosym.num.deploy.hu" depends="export.stardict.nosym.num.compile.hu">
		<zip destfile="${build.dir}/HunNor-ST-NoSym-Number-HN.zip" level="9">
			<filelist dir="." files="${build.dir}/HunNor-ST-NoSym-Number-HN.dict.dz,${build.dir}/HunNor-ST-NoSym-Number-HN.ifo,${build.dir}/HunNor-ST-NoSym-Number-HN.idx,${build.dir}/HunNor-ST-NoSym-Number-HN.syn"/>
		</zip>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.dict.dz"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.idx"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.syn"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-HN.zip" todir="${deploy.public.exports.dir}"/>
	</target>

	<target name="export.stardict.nosym.num.deploy.nb" depends="export.stardict.nosym.num.compile.nb">
		<zip destfile="${build.dir}/HunNor-ST-NoSym-Number-NH.zip" level="9">
			<filelist dir="." files="${build.dir}/HunNor-ST-NoSym-Number-NH.dict.dz,${build.dir}/HunNor-ST-NoSym-Number-NH.ifo,${build.dir}/HunNor-ST-NoSym-Number-NH.idx,${build.dir}/HunNor-ST-NoSym-Number-NH.syn"/>
		</zip>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.dict.dz"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.idx"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.syn"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-NH.zip" todir="${deploy.public.exports.dir}"/>
	</target>

	<target name="export.stardict.hu" depends="export.stardict.deploy.hu,export.stardict.nosym.num.deploy.hu">
		<gzip src="${build.dir}/HunNor-ST-HN.xml" destfile="${build.dir}/HunNor-ST-HN.xml.gz"/>
		<delete file="${build.dir}/HunNor-ST-HN.xml"/>
		<move file="${build.dir}/HunNor-ST-HN.xml.gz" todir="${deploy.public.databases.dir}"/>
		<gzip src="${build.dir}/HunNor-ST-NoSym-Number-HN.xml" destfile="${build.dir}/HunNor-ST-NoSym-Number-HN.xml.gz"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.xml"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-HN.xml.gz" todir="${deploy.public.databases.dir}"/>
	</target>

	<target name="export.stardict.nb" depends="export.stardict.deploy.nb,export.stardict.nosym.num.deploy.nb">
		<gzip src="${build.dir}/HunNor-ST-NH.xml" destfile="${build.dir}/HunNor-ST-NH.xml.gz"/>
		<delete file="${build.dir}/HunNor-ST-NH.xml"/>
		<move file="${build.dir}/HunNor-ST-NH.xml.gz" todir="${deploy.public.databases.dir}"/>
		<gzip src="${build.dir}/HunNor-ST-NoSym-Number-NH.xml" destfile="${build.dir}/HunNor-ST-NoSym-Number-NH.xml.gz"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.xml"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-NH.xml.gz" todir="${deploy.public.databases.dir}"/>
	</target>

	<!-- Top-level export targets -->

	<target name="export.hu" depends="export.babylon.hu,export.kindle.hu,export.pdf.hu,export.sdict.hu,export.stardict.hu">
	</target>

	<target name="export.nb" depends="export.babylon.nb,export.kindle.nb,export.pdf.nb,export.sdict.nb,export.stardict.nb">
	</target>

	<target name="export.android" depends="export.dump.hu,export.dump.nb">
		<!-- Delete to ensure that the data set is empty -->
		<delete dir="${build.dir}/hunnor-lucene-index"/>
		<delete dir="${build.dir}/hunnor-lucene-spelling"/>
		<delete file="${build.dir}/HunNor-Lucene.zip"/>
		<!-- Index -->
		<exec executable="java">
			<arg line="-jar ${android.indexer} -l hu -x ${build.dir}/HunNor-XML-HN.xml -d ${build.dir}/hunnor-lucene-index -s ${build.dir}/hunnor-lucene-spelling"/>
		</exec>
		<exec executable="java">
			<arg line="-jar ${android.indexer} -l no -x ${build.dir}/HunNor-XML-NH.xml -d ${build.dir}/hunnor-lucene-index -s ${build.dir}/hunnor-lucene-spelling"/>
		</exec>
		<!-- Archive Lucene index -->
		<zip destfile="${build.dir}/HunNor-Lucene.zip" level="9" filesonly="yes">
			<zipfileset dir="${build.dir}/hunnor-lucene-index" prefix="hunnor-lucene-index"/>
			<zipfileset dir="${build.dir}/hunnor-lucene-spelling" prefix="hunnor-lucene-spelling"/>
		</zip>
		<move file="${build.dir}/HunNor-Lucene.zip" todir="${deploy.public.databases.dir}"/>
		<!-- Delete again to clean up obsolete files -->
		<delete dir="${build.dir}/hunnor-lucene-index"/>
		<delete dir="${build.dir}/hunnor-lucene-spelling"/>
	</target>

	<target name="export.sqlite" depends="export.simple-html.hu,export.simple-html.nb">
		<delete file="${build.dir}/HunNor-SQLite.sqlite3"/>
		<exec executable="java">
			<arg line="-jar ${sqlite.indexer} -l hu -s ${build.dir}/HunNor-SQLite.sqlite3 -x ${build.dir}/HunNor-SimpleHTML-HN.xml"/>
		</exec>
		<exec executable="java">
			<arg line="-jar ${sqlite.indexer} -l nb -s ${build.dir}/HunNor-SQLite.sqlite3 -x ${build.dir}/HunNor-SimpleHTML-NH.xml"/>
		</exec>
		<move file="${build.dir}/HunNor-SQLite.sqlite3" todir="${deploy.public.databases.dir}"/>
	</target>

	<target name="export.all" depends="build.dir,export.hu,export.nb,export.android,export.sqlite">
	</target>

	<target name="export.cleanup.hu" depends="export.all">
		<delete file="${build.dir}/HunNor-SimpleHTML-HN.xml"/>
		<gzip src="${build.dir}/HunNor-XML-HN.xml" destfile="${build.dir}/HunNor-XML-HN.xml.gz"/>
		<delete file="${build.dir}/HunNor-XML-HN.xml"/>
		<move file="${build.dir}/HunNor-XML-HN.xml.gz" todir="${deploy.public.databases.dir}"/>
	</target>

	<target name="export.cleanup.nb" depends="export.all">
		<delete file="${build.dir}/HunNor-SimpleHTML-NH.xml"/>
		<gzip src="${build.dir}/HunNor-XML-NH.xml" destfile="${build.dir}/HunNor-XML-NH.xml.gz"/>
		<delete file="${build.dir}/HunNor-XML-NH.xml"/>
		<move file="${build.dir}/HunNor-XML-NH.xml.gz" todir="${deploy.public.databases.dir}"/>
	</target>

	<target name="export.cleanup.all" depends="export.cleanup.hu,export.cleanup.nb">
	</target>

	<target name="export" depends="export.cleanup.all">
	</target>

	<!-- Backup -->

	<target name="week.of.year">
		<tstamp>
			<format property="week" pattern="w"/>
		</tstamp>
	</target>

	<target name="backup" depends="week.of.year">
		<exec executable="mysqldump" output="hunnor.MySQL.${week}.sql">
			<arg line="-u hunnor hunnor hn_hun_segment hn_hun_tr_nob_tmp hn_nob_segment hn_nob_tr_hun_tmp"></arg>
		</exec>
		<gzip src="hunnor.MySQL.${week}.sql" destfile="hunnor.MySQL.${week}.sql.gz"/>
		<delete file="hunnor.MySQL.${week}.sql"/>
		<copy file="hunnor.MySQL.${week}.sql.gz" tofile="${deploy.public.databases.dir}/HunNor-MySQL.sql.gz"/>
		<move file="hunnor.MySQL.${week}.sql.gz" todir="${deploy.backup.dir}"/>
	</target>

</project>
