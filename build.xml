<?xml version="1.0" encoding="UTF-8"?>
<project name="hunnor-ant" default="export">

	<description>Convert the dictionary database to various XML based formats.</description>

	<property name="build.dir" location="build"/>

	<property environment="env"/>

	<property name="env.HUNNOR_ANT_APPLE_DDK_DIR" location="/Volumes/Additional Tools/Utilities/Dictionary Development Kit"/>
	<property name="env.HUNNOR_ANT_KINDLE_COMPILER" location="/tools/kindlegen-2.9-amazon/kindlegen"/>
	<property name="env.HUNNOR_ANT_SAXON_JAR" location="/opt/saxon-9-he/saxon9he.jar"/>
	<property name="env.HUNNOR_ANT_SDICT_COMPILER" location="/opt/sdict/bin/sdict-tools.plx"/>
	<property name="env.HUNNOR_ANT_SQLITE_JDBC_JAR" location="/tools/sqlite-jdbc-3.23.1.jar"/>
	<property name="env.HUNNOR_ANT_STARDICT_COMPILER" location="/usr/lib/stardict-tools/stardict-text2bin"/>

	<property name="env.HUNNOR_ANT_DEPLOY_DIR" location="/deploy"/>
	<property name="env.HUNNOR_ANT_DEPLOY_BACKUP_DIR" location="${env.HUNNOR_ANT_DEPLOY_DIR}/Backup"/>
	<property name="env.HUNNOR_ANT_DEPLOY_PUB_DIR" location="${env.HUNNOR_ANT_DEPLOY_DIR}/Public"/>
	<property name="env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR" location="${env.HUNNOR_ANT_DEPLOY_PUB_DIR}/Databases"/>
	<property name="env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR" location="${env.HUNNOR_ANT_DEPLOY_PUB_DIR}/Exports"/>

	<property name="env.HUNNOR_ANT_DUMP_HU" location="${build.dir}/HunNor-XML-HN.xml"/>
	<property name="env.HUNNOR_ANT_DUMP_NB" location="${build.dir}/HunNor-XML-NH.xml"/>

	<target name="build.dir">
		<mkdir dir="${build.dir}"/>
	</target>

	<!-- Simple HTML: An intermediate XML format which is the basis of further transformation to various offline formats. -->

	<target name="export.simple-html.hu">
		<xslt style="formats/simple-html.xsl" in="${env.HUNNOR_ANT_DUMP_HU}" out="${build.dir}/HunNor-SimpleHTML-HN.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
		</xslt>
	</target>

	<target name="export.simple-html.nb">
		<xslt style="formats/simple-html.xsl" in="${env.HUNNOR_ANT_DUMP_NB}" out="${build.dir}/HunNor-SimpleHTML-NH.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
		</xslt>
	</target>

	<!-- Apple -->

	<target name="export.apple.ddk">
		<condition property="apple.ddk">
			<available file="${env.HUNNOR_ANT_APPLE_DDK_DIR}"/>
		</condition>
	</target>

	<target name="export.apple.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/apple.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-Apple-HN.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="hn"/>
		</xslt>
		<xslt style="formats/apple-plist.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-Apple-HN-PList.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="hn"/>
		</xslt>
	</target>

	<target name="export.apple.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/apple.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-Apple-NH.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="nh"/>
		</xslt>
		<xslt style="formats/apple-plist.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-Apple-NH-PList.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="nh"/>
		</xslt>
	</target>

	<target name="export.apple.compile.hu" depends="export.apple.convert.hu,export.apple.ddk" if="${apple.ddk}">
		<exec dir="mac" executable="${env.HUNNOR_ANT_APPLE_DDK_DIR}/bin/build_dict.sh" failonerror="yes">
			<arg line="HunNor-HN ${build.dir}/HunNor-Apple-HN.xml apple.css ${build.dir}/HunNor-Apple-HN-PList.xml"/>
			<env key="DICT_BUILD_TOOL_DIR" value="${env.HUNNOR_ANT_APPLE_DDK_DIR}"/>
			<env key="DICT_DEV_KIT_OBJ_DIR" file="${build.dir}/apple"/>
		</exec>
		<exec dir="mac" executable="ditto" failonerror="yes">
			<arg line="--noextattr --norsrc ${build.dir}/apple/HunNor-HN.dictionary ${build.dir}/HunNor-HN.dictionary"/>
		</exec>
		<delete dir="${build.dir}/apple"/>
	</target>

	<target name="export.apple.compile.nb" depends="export.apple.convert.nb,export.apple.ddk" if="${apple.ddk}">
		<exec dir="mac" executable="${env.HUNNOR_ANT_APPLE_DDK_DIR}/bin/build_dict.sh" failonerror="yes">
			<arg line="HunNor-NH ${build.dir}/HunNor-Apple-NH.xml apple.css ${build.dir}/HunNor-Apple-NH-PList.xml"/>
			<env key="DICT_BUILD_TOOL_DIR" value="${env.HUNNOR_ANT_APPLE_DDK_DIR}"/>
			<env key="DICT_DEV_KIT_OBJ_DIR" file="${build.dir}/apple"/>
		</exec>
		<exec dir="mac" executable="ditto" failonerror="yes">
			<arg line="--noextattr --norsrc ${build.dir}/apple/HunNor-NH.dictionary ${build.dir}/HunNor-NH.dictionary"/>
		</exec>
		<delete dir="${build.dir}/apple"/>
	</target>

	<target name="export.apple.deploy.hu" depends="export.apple.convert.hu,export.apple.compile.hu">
		<tar destfile="${build.dir}/HunNor-Apple-HN.tar">
			<filelist dir="${build.dir}" files="${build.dir}/HunNor-Apple-HN.xml,${build.dir}/HunNor-Apple-HN-PList.xml"/>
		</tar>
		<delete file="${build.dir}/HunNor-Apple-HN.xml"/>
		<delete file="${build.dir}/HunNor-Apple-HN-PList.xml"/>
		<gzip destfile="${build.dir}/HunNor-Apple-HN.tar.gz" src="${build.dir}/HunNor-Apple-HN.tar"/>
		<delete file="${build.dir}/HunNor-Apple-HN.tar"/>
		<move file="${build.dir}/HunNor-Apple-HN.tar.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.apple.deploy.nb" depends="export.apple.convert.nb,export.apple.compile.nb">
		<tar destfile="${build.dir}/HunNor-Apple-NH.tar">
			<filelist dir="${build.dir}" files="${build.dir}/HunNor-Apple-NH.xml,${build.dir}/HunNor-Apple-NH-PList.xml"/>
		</tar>
		<delete file="${build.dir}/HunNor-Apple-NH.xml"/>
		<delete file="${build.dir}/HunNor-Apple-NH-PList.xml"/>
		<gzip destfile="${build.dir}/HunNor-Apple-NH.tar.gz" src="${build.dir}/HunNor-Apple-NH.tar"/>
		<delete file="${build.dir}/HunNor-Apple-NH.tar"/>
		<move file="${build.dir}/HunNor-Apple-NH.tar.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.apple.hu" depends="export.apple.deploy.hu">
	</target>

	<target name="export.apple.nb" depends="export.apple.deploy.nb">
	</target>

	<!-- Babylon: A text file format with a proprietary syntax, for use with the Glossary Builder of the Babylon dictionary. -->

	<target name="export.babylon.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/babylon.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-BB-HN.gls" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="hn"/>
		</xslt>
	</target>

	<target name="export.babylon.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/babylon.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-BB-NH.gls" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="nh"/>
		</xslt>
	</target>

	<target name="export.babylon.deploy.hu" depends="export.babylon.convert.hu">
		<gzip src="${build.dir}/HunNor-BB-HN.gls" destfile="${build.dir}/HunNor-BB-HN.gls.gz"/>
		<delete file="${build.dir}/HunNor-BB-HN.gls"/>
		<move file="${build.dir}/HunNor-BB-HN.gls.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.babylon.deploy.nb" depends="export.babylon.convert.nb">
		<gzip src="${build.dir}/HunNor-BB-NH.gls" destfile="${build.dir}/HunNor-BB-NH.gls.gz"/>
		<delete file="${build.dir}/HunNor-BB-NH.gls"/>
		<move file="${build.dir}/HunNor-BB-NH.gls.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.babylon.hu" depends="export.babylon.deploy.hu">
	</target>

	<target name="export.babylon.nb" depends="export.babylon.deploy.nb">
	</target>

	<!-- Kindle -->

	<target name="export.kindle.hu" depends="export.simple-html.hu">
		<!-- Intentionally left blank -->
	</target>

	<target name="export.kindle.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/kindle.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-Kindle-NH.html" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
		</xslt>
		<xslt style="formats/kindle-opf.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-Kindle-NH.opf" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="contentFile" expression="HunNor-Kindle-NH.html"/>
			<param name="logoFile" expression="../images/logo-colors.png"/>
			<param name="inLanguage" expression="pt"/>
			<param name="outLanguage" expression="hu"/>
		</xslt>
	</target>

	<target name="export.kindle.compile.nb" depends="export.kindle.convert.nb,export.kindle.compiler">
		<copy todir="${build.dir}/images">
			<fileset dir="images"/>
		</copy>
		<exec dir="${build.dir}" executable="${env.HUNNOR_ANT_KINDLE_COMPILER}">
			<arg line="HunNor-Kindle-NH.opf"/>
		</exec>
		<delete dir="${build.dir}/images"/>
	</target>

	<target name="export.kindle.deploy.nb" depends="export.kindle.compile.nb">
		<delete file="${build.dir}/HunNor-Kindle-NH.html"/>
		<delete file="${build.dir}/HunNor-Kindle-NH.opf"/>
		<move file="${build.dir}/HunNor-Kindle-NH.mobi" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<target name="export.kindle.nb" depends="export.kindle.deploy.nb">
	</target>

	<target name ="export.kindle.compiler.check">
		<available file="${env.HUNNOR_ANT_KINDLE_COMPILER}" property="export.kindle.compiler.available"/>
	</target>

	<target name="export.kindle.compiler" depends="export.kindle.compiler.check" unless="export.kindle.compiler.available">
		<dirname file="${env.HUNNOR_ANT_KINDLE_COMPILER}" property="kindle.dir"/>
		<mkdir dir="${kindle.dir}"/>
		<get src="http://kindlegen.s3.amazonaws.com/kindlegen_linux_2.6_i386_v2_9.tar.gz" dest="${kindle.dir}" skipexisting="true"/>
		<gunzip src="${kindle.dir}/kindlegen_linux_2.6_i386_v2_9.tar.gz"/>
		<delete file="${kindle.dir}/kindlegen_linux_2.6_i386_v2_9.tar.gz"/>
		<untar src="${kindle.dir}/kindlegen_linux_2.6_i386_v2_9.tar" dest="${kindle.dir}"/>
		<delete file="${kindle.dir}/kindlegen_linux_2.6_i386_v2_9.tar"/>
		<chmod file="${env.HUNNOR_ANT_KINDLE_COMPILER}" perm="755"/>
	</target>

	<!-- PDF -->

	<target name="export.pdf.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/pdf.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-FO-HN.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
		</xslt>
	</target>

	<target name="export.pdf.hu" depends="export.pdf.convert.hu">
		<exec executable="fop">
			<arg line="-q -cache ${build.dir}/fop-fonts.cache -c fonts/fonts.xml -fo ${build.dir}/HunNor-FO-HN.xml -pdf ${build.dir}/HunNor-PDF-HN.pdf"/>
			<env key="JAVA_HOME" value="${env.HUNNOR_ANT_JAVA_HOME}"/>
		</exec>
		<delete file="${build.dir}/HunNor-FO-HN.xml"/>
		<move file="${build.dir}/HunNor-PDF-HN.pdf" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<target name="export.pdf.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/pdf.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-FO-NH.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
		</xslt>
	</target>

	<target name="export.pdf.nb" depends="export.pdf.convert.nb">
		<exec executable="fop">
			<arg line="-q -cache ${build.dir}/fop-fonts.cache -c fonts/fonts.xml -fo ${build.dir}/HunNor-FO-NH.xml -pdf ${build.dir}/HunNor-PDF-NH.pdf"/>
			<env key="JAVA_HOME" value="${env.HUNNOR_ANT_JAVA_HOME}"/>
		</exec>
		<delete file="${build.dir}/HunNor-FO-NH.xml"/>
		<move file="${build.dir}/HunNor-PDF-NH.pdf" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<!-- SDictionary: A text file format that can be compiled to a binary .dct dictionary file with the tools included in the SDictionary project. -->

	<target name="export.sdict.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/sdict.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-SD-HN.sdct" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="hn"/>
		</xslt>
	</target>

	<target name="export.sdict.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/sdict.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-SD-NH.sdct" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="nh"/>
		</xslt>
	</target>

	<target name="export.sdict.compile.hu" depends="export.sdict.convert.hu">
		<exec executable="${env.HUNNOR_ANT_SDICT_COMPILER}">
			<arg line="--compile --input-file=${build.dir}/HunNor-SD-HN.sdct --output-file=${build.dir}/HunNor-SD-HN.dct"/>
		</exec>
	</target>

	<target name="export.sdict.compile.nb" depends="export.sdict.convert.nb">
		<exec executable="${env.HUNNOR_ANT_SDICT_COMPILER}">
			<arg line="--compile --input-file=${build.dir}/HunNor-SD-NH.sdct --output-file=${build.dir}/HunNor-SD-NH.dct"/>
		</exec>
	</target>

	<target name="export.sdict.deploy.hu" depends="export.sdict.compile.hu">
		<move file="${build.dir}/HunNor-SD-HN.dct" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<target name="export.sdict.deploy.nb" depends="export.sdict.compile.nb">
		<move file="${build.dir}/HunNor-SD-NH.dct" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<target name="export.sdict.hu" depends="export.sdict.deploy.hu">
		<gzip src="${build.dir}/HunNor-SD-HN.sdct" destfile="${build.dir}/HunNor-SD-HN.sdct.gz"/>
		<delete file="${build.dir}/HunNor-SD-HN.sdct"/>
		<move file="${build.dir}/HunNor-SD-HN.sdct.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.sdict.nb" depends="export.sdict.deploy.nb">
		<gzip src="${build.dir}/HunNor-SD-NH.sdct" destfile="${build.dir}/HunNor-SD-NH.sdct.gz"/>
		<delete file="${build.dir}/HunNor-SD-NH.sdct"/>
		<move file="${build.dir}/HunNor-SD-NH.sdct.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<!-- StarDict -->

	<target name="export.stardict.compiler">
		<condition property="stardict.compiler">
			<available file="${env.HUNNOR_ANT_STARDICT_COMPILER}"/>
		</condition>
	</target>

	<target name="export.stardict.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/stardict.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-ST-HN.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="hn"/>
		</xslt>
	</target>

	<target name="export.stardict.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/stardict.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-ST-NH.xml" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="nh"/>
		</xslt>
	</target>

	<target name="export.stardict.compile.hu" depends="export.stardict.convert.hu,export.stardict.compiler" if="${stardict.compiler}">
		<exec executable="${env.HUNNOR_ANT_STARDICT_COMPILER}">
			<arg line="${build.dir}/HunNor-ST-HN.xml ${build.dir}/HunNor-ST-HN.ifo"/>
		</exec>
		<!-- Cut the BOM from the .ifo file -->
		<exec executable="tail" output="${build.dir}/HunNor-ST-HN.tmp">
			<arg line="--bytes=+4 ${build.dir}/HunNor-ST-HN.ifo"/>
		</exec>
		<delete file="${build.dir}/HunNor-ST-HN.ifo"/>
		<move file="${build.dir}/HunNor-ST-HN.tmp" tofile="${build.dir}/HunNor-ST-HN.ifo"/>
	</target>

	<target name="export.stardict.compile.nb" depends="export.stardict.convert.nb,export.stardict.compiler" if="${stardict.compiler}">
		<exec executable="${env.HUNNOR_ANT_STARDICT_COMPILER}">
			<arg line="${build.dir}/HunNor-ST-NH.xml ${build.dir}/HunNor-ST-NH.ifo"/>
		</exec>
		<!-- Cut the BOM from the .ifo file -->
		<exec executable="tail" output="${build.dir}/HunNor-ST-NH.tmp">
			<arg line="--bytes=+4 ${build.dir}/HunNor-ST-NH.ifo"/>
		</exec>
		<delete file="${build.dir}/HunNor-ST-NH.ifo"/>
		<move file="${build.dir}/HunNor-ST-NH.tmp" tofile="${build.dir}/HunNor-ST-NH.ifo"/>
	</target>

	<target name="export.stardict.deploy.hu" depends="export.stardict.compile.hu" if="${stardict.compiler}">
		<zip destfile="${build.dir}/HunNor-ST-HN.zip" level="9">
			<filelist dir="${build.dir}" files="${build.dir}/HunNor-ST-HN.dict.dz,${build.dir}/HunNor-ST-HN.ifo,${build.dir}/HunNor-ST-HN.idx,${build.dir}/HunNor-ST-HN.syn"/>
		</zip>
		<delete file="${build.dir}/HunNor-ST-HN.dict.dz"/>
		<delete file="${build.dir}/HunNor-ST-HN.ifo"/>
		<delete file="${build.dir}/HunNor-ST-HN.idx"/>
		<delete file="${build.dir}/HunNor-ST-HN.syn"/>
		<move file="${build.dir}/HunNor-ST-HN.zip" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<target name="export.stardict.deploy.nb" depends="export.stardict.compile.nb" if="${stardict.compiler}">
		<zip destfile="${build.dir}/HunNor-ST-NH.zip" level="9">
			<filelist dir="${build.dir}" files="${build.dir}/HunNor-ST-NH.dict.dz,${build.dir}/HunNor-ST-NH.ifo,${build.dir}/HunNor-ST-NH.idx,${build.dir}/HunNor-ST-NH.syn"/>
		</zip>
		<delete file="${build.dir}/HunNor-ST-NH.dict.dz"/>
		<delete file="${build.dir}/HunNor-ST-NH.ifo"/>
		<delete file="${build.dir}/HunNor-ST-NH.idx"/>
		<delete file="${build.dir}/HunNor-ST-NH.syn"/>
		<move file="${build.dir}/HunNor-ST-NH.zip" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<target name="export.stardict.nosym.num.convert.hu" depends="export.stardict.convert.hu">
		<xslt style="formats/stardict-nosym-number.xsl" in="${build.dir}/HunNor-ST-HN.xml" out="${build.dir}/HunNor-ST-NoSym-Number-HN.xml" force="true">
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
		</xslt>
	</target>

	<target name="export.stardict.nosym.num.convert.nb" depends="export.stardict.convert.nb">
		<xslt style="formats/stardict-nosym-number.xsl" in="${build.dir}/HunNor-ST-NH.xml" out="${build.dir}/HunNor-ST-NoSym-Number-NH.xml" force="true">
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
		</xslt>
	</target>

	<target name="export.stardict.nosym.num.compile.hu" depends="export.stardict.nosym.num.convert.hu,export.stardict.compiler" if="${stardict.compiler}">
		<exec executable="${env.HUNNOR_ANT_STARDICT_COMPILER}">
			<arg line="${build.dir}/HunNor-ST-NoSym-Number-HN.xml ${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
		</exec>
		<!-- Cut the BOM from the .ifo file -->
		<exec executable="tail" output="${build.dir}/HunNor-ST-NoSym-Number-HN.tmp">
			<arg line="--bytes=+4 ${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
		</exec>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-HN.tmp" tofile="${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
	</target>

	<target name="export.stardict.nosym.num.compile.nb" depends="export.stardict.nosym.num.convert.nb,export.stardict.compiler" if="${stardict.compiler}">
		<exec executable="${env.HUNNOR_ANT_STARDICT_COMPILER}">
			<arg line="${build.dir}/HunNor-ST-NoSym-Number-NH.xml ${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
		</exec>
		<!-- Cut the BOM from the .ifo file -->
		<exec executable="tail" output="${build.dir}/HunNor-ST-NoSym-Number-NH.tmp">
			<arg line="--bytes=+4 ${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
		</exec>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-NH.tmp" tofile="${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
	</target>

	<target name="export.stardict.nosym.num.deploy.hu" depends="export.stardict.nosym.num.compile.hu" if="${stardict.compiler}">
		<zip destfile="${build.dir}/HunNor-ST-NoSym-Number-HN.zip" level="9">
			<filelist dir="${build.dir}" files="${build.dir}/HunNor-ST-NoSym-Number-HN.dict.dz,${build.dir}/HunNor-ST-NoSym-Number-HN.ifo,${build.dir}/HunNor-ST-NoSym-Number-HN.idx,${build.dir}/HunNor-ST-NoSym-Number-HN.syn"/>
		</zip>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.dict.dz"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.ifo"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.idx"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.syn"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-HN.zip" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<target name="export.stardict.nosym.num.deploy.nb" depends="export.stardict.nosym.num.compile.nb" if="${stardict.compiler}">
		<zip destfile="${build.dir}/HunNor-ST-NoSym-Number-NH.zip" level="9">
			<filelist dir="${build.dir}" files="${build.dir}/HunNor-ST-NoSym-Number-NH.dict.dz,${build.dir}/HunNor-ST-NoSym-Number-NH.ifo,${build.dir}/HunNor-ST-NoSym-Number-NH.idx,${build.dir}/HunNor-ST-NoSym-Number-NH.syn"/>
		</zip>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.dict.dz"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.ifo"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.idx"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.syn"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-NH.zip" todir="${env.HUNNOR_ANT_DEPLOY_PUB_EXPORTS_DIR}"/>
	</target>

	<target name="export.stardict.hu" depends="export.stardict.deploy.hu,export.stardict.nosym.num.deploy.hu">
		<gzip src="${build.dir}/HunNor-ST-HN.xml" destfile="${build.dir}/HunNor-ST-HN.xml.gz"/>
		<delete file="${build.dir}/HunNor-ST-HN.xml"/>
		<move file="${build.dir}/HunNor-ST-HN.xml.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
		<gzip src="${build.dir}/HunNor-ST-NoSym-Number-HN.xml" destfile="${build.dir}/HunNor-ST-NoSym-Number-HN.xml.gz"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-HN.xml"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-HN.xml.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.stardict.nb" depends="export.stardict.deploy.nb,export.stardict.nosym.num.deploy.nb">
		<gzip src="${build.dir}/HunNor-ST-NH.xml" destfile="${build.dir}/HunNor-ST-NH.xml.gz"/>
		<delete file="${build.dir}/HunNor-ST-NH.xml"/>
		<move file="${build.dir}/HunNor-ST-NH.xml.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
		<gzip src="${build.dir}/HunNor-ST-NoSym-Number-NH.xml" destfile="${build.dir}/HunNor-ST-NoSym-Number-NH.xml.gz"/>
		<delete file="${build.dir}/HunNor-ST-NoSym-Number-NH.xml"/>
		<move file="${build.dir}/HunNor-ST-NoSym-Number-NH.xml.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<!-- XDXF -->

	<target name="export.xdxf.convert.hu" depends="export.simple-html.hu">
		<xslt style="formats/xdxf-lousy.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-XDXF-L-HN.xdxf" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="hn"/>
		</xslt>
	</target>

	<target name="export.xdxf.convert.nb" depends="export.simple-html.nb">
		<xslt style="formats/xdxf-lousy.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-XDXF-L-NH.xdxf" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="nh"/>
		</xslt>
	</target>

	<target name="export.xdxf.deploy.hu" depends="export.xdxf.convert.hu">
		<gzip src="${build.dir}/HunNor-XDXF-L-HN.xdxf" destfile="${build.dir}/HunNor-XDXF-L-HN.xdxf.gz"/>
		<delete file="${build.dir}/HunNor-XDXF-L-HN.xdxf"/>
		<move file="${build.dir}/HunNor-XDXF-L-HN.xdxf.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.xdxf.deploy.nb" depends="export.xdxf.convert.nb">
		<gzip src="${build.dir}/HunNor-XDXF-L-NH.xdxf" destfile="${build.dir}/HunNor-XDXF-L-NH.xdxf.gz"/>
		<delete file="${build.dir}/HunNor-XDXF-L-NH.xdxf"/>
		<move file="${build.dir}/HunNor-XDXF-L-NH.xdxf.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.xdxf.hu" depends="export.xdxf.deploy.hu">
	</target>

	<target name="export.xdxf.nb" depends="export.xdxf.deploy.nb">
	</target>

	<!-- Top-level export targets -->

	<target name="export.hu" depends="export.apple.hu,export.babylon.hu,export.kindle.hu,export.pdf.hu,export.sdict.hu,export.stardict.hu,export.xdxf.hu">
	</target>

	<target name="export.nb" depends="export.apple.nb,export.babylon.nb,export.kindle.nb,export.pdf.nb,export.sdict.nb,export.stardict.nb,export.xdxf.nb">
	</target>

	<target name="export.android.generate">
		<taskdef name="lucene" classname="net.hunnor.dict.lucene.AntTask"/>
		<delete dir="${build.dir}/hunnor-lucene-index"/>
		<delete dir="${build.dir}/hunnor-lucene-spelling"/>
		<delete file="${build.dir}/HunNor-Lucene.zip"/>
		<lucene language="HU" main="${build.dir}/hunnor-lucene-index" source="${env.HUNNOR_ANT_DUMP_HU}" spelling="${build.dir}/hunnor-lucene-spelling"/>
		<lucene language="NO" main="${build.dir}/hunnor-lucene-index" source="${env.HUNNOR_ANT_DUMP_NB}" spelling="${build.dir}/hunnor-lucene-spelling"/>
	</target>

	<target name="export.android.deploy" depends="export.android.generate">
		<zip destfile="${build.dir}/HunNor-Lucene.zip" level="9" filesonly="yes">
			<zipfileset dir="${build.dir}/hunnor-lucene-index" prefix="hunnor-lucene-index"/>
			<zipfileset dir="${build.dir}/hunnor-lucene-spelling" prefix="hunnor-lucene-spelling"/>
		</zip>
		<move file="${build.dir}/HunNor-Lucene.zip" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
		<delete dir="${build.dir}/hunnor-lucene-index"/>
		<delete dir="${build.dir}/hunnor-lucene-spelling"/>
	</target>

	<target name="export.android" depends="export.android.deploy">
	</target>

	<target name="export.sqlite.convert" depends="export.simple-html.hu,export.simple-html.nb">
		<xslt style="formats/sqlite.xsl" in="${build.dir}/HunNor-SimpleHTML-HN.xml" out="${build.dir}/HunNor-SQLite-HN.sql" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="hu"/>
		</xslt>
		<xslt style="formats/sqlite.xsl" in="${build.dir}/HunNor-SimpleHTML-NH.xml" out="${build.dir}/HunNor-SQLite-NH.sql" force="true">
			<factory name="net.sf.saxon.TransformerFactoryImpl"/>
			<classpath location="${env.HUNNOR_ANT_SAXON_JAR}"/>
			<param name="direction" expression="nb"/>
		</xslt>
	</target>

	<target name="export.sqlite.jdbc.jar">
		<get dest="${env.HUNNOR_ANT_SQLITE_JDBC_JAR}" skipexisting="true" src="https://bitbucket.org/xerial/sqlite-jdbc/downloads/sqlite-jdbc-3.23.1.jar"/>
	</target>

	<target name="export.sqlite.generate" depends="export.sqlite.convert,export.sqlite.jdbc.jar">
		<delete file="${build.dir}/HunNor-SQLite.sqlite3"/>
		<sql classpath="${env.HUNNOR_ANT_SQLITE_JDBC_JAR}" driver="org.sqlite.JDBC" escapeprocessing="false" password="hunnor" src="${build.dir}/HunNor-SQLite-HN.sql" url="jdbc:sqlite:${build.dir}/HunNor-SQLite.sqlite3" userid="hunnor"/>
		<sql classpath="${env.HUNNOR_ANT_SQLITE_JDBC_JAR}" driver="org.sqlite.JDBC" escapeprocessing="false" password="hunnor" src="${build.dir}/HunNor-SQLite-NH.sql" url="jdbc:sqlite:${build.dir}/HunNor-SQLite.sqlite3" userid="hunnor"/>
		<checksum file="${build.dir}/HunNor-SQLite.sqlite3" algorithm="MD5" fileext=".md5"/>
	</target>

	<target name="export.sqlite.deploy" depends="export.sqlite.generate">
		<mkdir dir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
		<move file="${build.dir}/HunNor-SQLite.sqlite3" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
		<move file="${build.dir}/HunNor-SQLite.sqlite3.md5" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
		<delete file="${build.dir}/HunNor-SQLite-HN.sql"/>
		<delete file="${build.dir}/HunNor-SQLite-NH.sql"/>
	</target>

	<target name="export.sqlite" depends="export.sqlite.deploy">
	</target>

	<target name="export.all" depends="build.dir,export.hu,export.nb,export.android,export.sqlite">
	</target>

	<target name="export.cleanup.hu" depends="export.all">
		<delete file="${build.dir}/HunNor-SimpleHTML-HN.xml"/>
		<gzip src="${env.HUNNOR_ANT_DUMP_HU}" destfile="${env.HUNNOR_ANT_DUMP_HU}.gz"/>
		<delete file="${env.HUNNOR_ANT_DUMP_HU}"/>
		<move file="${env.HUNNOR_ANT_DUMP_HU}.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.cleanup.nb" depends="export.all">
		<delete file="${build.dir}/HunNor-SimpleHTML-NH.xml"/>
		<gzip src="${env.HUNNOR_ANT_DUMP_NB}" destfile="${env.HUNNOR_ANT_DUMP_NB}.gz"/>
		<delete file="${env.HUNNOR_ANT_DUMP_NB}"/>
		<move file="${env.HUNNOR_ANT_DUMP_NB}.gz" todir="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}"/>
	</target>

	<target name="export.cleanup.all" depends="export.cleanup.hu,export.cleanup.nb">
	</target>

	<target name="export" depends="export.cleanup.all">
	</target>

	<!-- Backup -->

	<target name="week.of.year">
		<tstamp>
			<format property="week" pattern="w"/>
		</tstamp>
	</target>

	<target name="backup" depends="week.of.year">
		<gzip src="${build.dir}/hunnor.sql" destfile="${build.dir}/hunnor.MySQL.${week}.sql.gz"/>
		<delete file="${build.dir}/hunnor.sql"/>
		<copy file="${build.dir}/hunnor.MySQL.${week}.sql.gz" tofile="${env.HUNNOR_ANT_DEPLOY_PUB_DB_DIR}/HunNor-MySQL.sql.gz"/>
		<move file="${build.dir}/hunnor.MySQL.${week}.sql.gz" todir="${env.HUNNOR_ANT_DEPLOY_BACKUP_DIR}"/>
	</target>

</project>
